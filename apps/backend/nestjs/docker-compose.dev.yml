version: '3.8'

services:
  # PostgreSQL Database
  postgres-dev:
    image: postgres:15-alpine
    container_name: reactai-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: reactai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - reactai-dev-network

  # Redis Cache
  redis-dev:
    image: redis:7-alpine
    container_name: reactai-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - reactai-dev-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: reactai-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@reactai.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres-dev
    networks:
      - reactai-dev-network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: reactai-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis-dev:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis-dev
    networks:
      - reactai-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  reactai-dev-network:
    driver: bridge